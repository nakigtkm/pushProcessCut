// 既定値を上書きするには、このファイル内にキー バインドを挿入します
[
    {
        "key": "meta+/",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },

    {
        "key": "ctrl+h",
        "command": "deleteLeft"
    },

    {
        "key": "ctrl+p",
        "command": "cursorUp"
    },

    {
        "key": "ctrl+f",
        "command": "cursorRight"
    },

    {
        "key": "down",
        "command": "cursorDown"
    },

    {
        "key": "ctrl+b",
        "command": "cursorLeft"
    },

    {
        "key": "ctrl+e",
       "command": "cursorEnd"
    },

    {
        "key": "ctrl+a",
        "command": "cursorLineStart"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-notification.acceptPrimaryAction",
        "when": "notificationFocus || notificationToastsVisible"
    },

    {
        "key": "cmd+ctrl+[",
        "command": "workbench.action.moveEditorLeftInGroup"
    },


    {
        "key": "cmd+ctrl+]",
        "command": "workbench.action.moveActiveEditorGroupRight"
    },

    {
        "key": "ctrl+d",
        "command": "deleteRight"
    },


    {
        "key": "ctrl+shift+a",
        "command": "editor.action.selectAll"
    },

    {
        "key": "ctrl+k",
        "command": "deleteAllRight"
    },
    {
        "key": "ctrl+n",
        "command": "cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "down",
        "command": "-cursorDown"
    },
    {
        "key": "ctrl+p",
        "command": "-cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+b",
        "command": "-cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+e",
        "command": "-cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+a",
        "command": "-cursorLineStart",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-deleteRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "-deleteAllRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+]",
        "command": "cursorWordEndRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+[",
        "command": "cursorWordEndLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+g",
        "command": "cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+g",
        "command": "cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+g /",
        "command": "-gitlens.gitCommands",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g ,",
        "command": "-gitlens.diffWithPrevious",
        "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "ctrl+shift+g shift+[IntlBackslash]",
        "command": "-gitlens.diffWithWorking",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "ctrl+shift+g ,",
        "command": "-gitlens.diffWithPreviousInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "ctrl+shift+g s",
        "command": "-gitlens.showQuickRepoStatus",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g b",
        "command": "-gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.terminal.goToRecentDirectory",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.action.terminal.openDetectedLink",
        "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'"
    },

]
